const { loadImage, createCanvas } = require("canvas");
const fs = require("fs-extra"); // fs-extra ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá, ‡¶ï‡¶æ‡¶∞‡¶£ ‡¶è‡¶ü‡¶ø fs ‡¶è‡¶∞ ‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßá‡¶∂‡¶ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶∞‡ßÄ
const axios = require("axios");
const path = require("path"); // path ‡¶Æ‡¶°‡¶ø‡¶â‡¶≤ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶• ‡¶§‡ßà‡¶∞‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø

module.exports = {
  config: {
    name: "wanted",
    aliases: ["wtd"], // ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ø‡ßü‡¶æ‡¶∏ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®
    version: "1.2.0",
    author: "Rx Abdullah Convert To Goat bot v2 by Akash",
    countdown: 5, // ‡¶ï‡ßÅ‡¶≤‡¶°‡¶æ‡¶â‡¶® ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá
    role: 0, // 0 = ‡¶∏‡¶¨ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞, 1 = ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®, 2 = ‡¶¨‡¶ü ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï
    description: "Generate a wanted poster with user's avatar.",
    category: "fun",
    guide: {
      en: "{pn} mention\nor reply to a message." // {pn} ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶ø‡¶§ ‡¶π‡¶¨‡ßá
    }
  },

  onstart: async function ({ api, event }) {
    try {
      const mentions = Object.keys(event.mentions || {});
      let targetuid;

      // ‡¶ü‡¶æ‡¶∞‡ßç‡¶ó‡ßá‡¶ü ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶® (‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶¨‡¶æ ‡¶Æ‡ßá‡¶®‡¶∂‡¶®)
      if (event.messageReply) {
        targetuid = event.messageReply.senderID;
      } else if (mentions.length > 0) {
        targetuid = mentions[0];
      } else {
        // ‡¶Ø‡¶¶‡¶ø ‡¶ü‡¶æ‡¶∞‡ßç‡¶ó‡ßá‡¶ü ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶∏‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ï‡ßá‡¶á ‡¶ü‡¶æ‡¶∞‡ßç‡¶ó‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá (‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶≤‡¶ú‡¶ø‡¶ï‡ßá ‡¶õ‡¶ø‡¶≤)
        // ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶¨‡¶æ ‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡¶≤‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§
        targetuid = event.senderID; 
        // ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶è‡¶ü‡¶ø‡¶ì ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®:
        // return api.sendMessage("Please reply to a message or mention a user to use this command.", event.threadID, event.messageID);
      }

      // ‡¶ü‡¶æ‡¶∞‡ßç‡¶ó‡ßá‡¶ü ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡ßÅ‡¶®
      const userInfo = await api.getUserInfo(targetuid);
      const name = userInfo[targetuid].name;

      const cacheDir = path.join(__dirname, "cache");
      await fs.ensureDir(cacheDir); // ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶Ø‡ßá /cache ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá
      
      const pathBg = path.join(cacheDir, "wanted_bg.png");
      const pathAvt = path.join(cacheDir, "wanted_avt.png");
      const pathOut = path.join(cacheDir, `wanted_${targetuid}_result.png`); // ‡¶´‡¶æ‡¶á‡¶≤ ‡¶®‡¶æ‡¶Æ ‡¶á‡¶â‡¶®‡¶ø‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá

      // üñºÔ∏è ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° (‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ Imgur wanted poster)
      const bgLink = "https://i.imgur.com/hNj6wpU.jpeg"; // ‡¶™‡¶∞‡¶ø‡¶∑‡ßç‡¶ï‡¶æ‡¶∞, ‡¶â‡¶ö‡ßç‡¶ö ‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶´‡ßç‡¶∞‡ßá‡¶Æ
      const bgResponse = await axios.get(bgLink, { responseType: "arraybuffer" });
      fs.writeFileSync(pathBg, Buffer.from(bgResponse.data));

      // üë§ ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶õ‡¶¨‡¶ø
      const avtLink = `https://graph.facebook.com/${targetuid}/picture?width=720&height=720&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`;
      const avtResponse = await axios.get(avtLink, { responseType: "arraybuffer" });
      fs.writeFileSync(pathAvt, Buffer.from(avtResponse.data));

      // üß© ‡¶¶‡ßÅ‡¶ü‡¶ø ‡¶õ‡¶¨‡¶ø ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
      const base = await loadImage(pathBg);
      const avatar = await loadImage(pathAvt);
      const canvas = createCanvas(base.width, base.height);
      const ctx = canvas.getContext("2d");

      // üñåÔ∏è ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶õ‡¶¨‡¶ø ‡¶Ü‡¶Å‡¶ï‡ßÅ‡¶®
      ctx.drawImage(base, 0, 0, canvas.width, canvas.height);

      // ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶® (GoatBot ‡¶∏‡ßç‡¶ü‡¶æ‡¶á‡¶≤): ‡¶´‡ßç‡¶∞‡ßá‡¶Æ‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ù‡¶ñ‡¶æ‡¶®‡ßá
      ctx.save();
      ctx.beginPath();
      ctx.arc(350, 420, 150, 0, Math.PI * 2, true); // ‡¶ó‡ßã‡¶≤‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶∏‡ßç‡¶ï
      ctx.closePath();
      ctx.clip();
      ctx.drawImage(avatar, 200, 270, 300, 300);
      ctx.restore();

      // ‚úçÔ∏è ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü (‡¶®‡¶æ‡¶Æ)
      ctx.font = "bold 38px Times New Roman";
      ctx.fillStyle = "#3e2d00"; // ‡¶ó‡¶æ‡ßù ‡¶ñ‡ßü‡ßá‡¶∞‡¶ø ‡¶∞‡¶Ç
      ctx.textAlign = "center";

      // ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶∞‡ßç‡¶Ø‡¶æ‡¶™‡¶ø‡¶Ç ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
      const wrapText = async (ctx, text, maxWidth) => {
        if (ctx.measureText(text).width < maxWidth) return [text];
        const words = text.split(" ");
        const lines = [];
        let line = "";
        for (const word of words) {
          if (ctx.measureText(line + word).width < maxWidth) line += word + " ";
          else {
            lines.push(line.trim());
            line = word + " ";
          }
        }
        if (line) lines.push(line.trim());
        return lines;
      };

      const lines = await wrapText(ctx, name, 400); // ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶∞‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶∞‡¶æ
      lines.forEach((line, i) => {
        ctx.fillText(line, canvas.width / 2, 640 + i * 42); // ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶æ‡¶∞‡ßá ‡¶®‡¶æ‡¶Æ ‡¶≤‡ßá‡¶ñ‡¶æ
      });

      // üßæ ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®
      const imgBuffer = canvas.toBuffer();
      fs.writeFileSync(pathOut, imgBuffer);

      // üì® ‡¶õ‡¶¨‡¶ø ‡¶™‡¶æ‡¶†‡¶æ‡¶®
      api.sendMessage(
        {
          body: `üö® WANTED ALERT üö®\n${name} is a dangerous outlaw!\nüí∞ Reward: $1 (dead or alive)`,
          attachment: fs.createReadStream(pathOut)
        },
        event.threadID,
        () => {
          // ‡¶ü‡ßá‡¶Æ‡ßç‡¶™‡ßã‡¶∞‡¶æ‡¶∞‡¶ø ‡¶´‡¶æ‡¶á‡¶≤‡¶ó‡ßÅ‡¶≤‡ßã ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
          fs.unlinkSync(pathBg);
          fs.unlinkSync(pathAvt);
          fs.unlinkSync(pathOut);
        },
        event.messageID
      );

    } catch (e) {
      console.error("Error generating wanted image:", e); // ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶≤‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
      api.sendMessage("‚ùå Couldn't generate wanted image. Please try again later.", event.threadID, event.messageID);
    }
  }
};
