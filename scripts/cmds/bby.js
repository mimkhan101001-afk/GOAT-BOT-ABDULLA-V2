const axios = require("axios");
const simsim = "https://simsimi.cyberbot.top";

module.exports = {
  config: {
    name: "baby",
    version: "1.0.3",
    author: "ULLASH (Modified By Mehedi) ",
    countDown: 0,
    role: 0,
    shortDescription: "Cute AI Baby Chatbot",
    longDescription: "Talk, Teach & Chat with Emotion тАФ Baby AI chatbot powered by SimSimi API",
    category: "fun",
    guide: {
      en: "{p}baby [message]\n{p}baby teach [Question] - [Answer]\n{p}baby edit [Question] - [OldReply] - [NewReply]\n{p}baby remove [Question] - [Reply]\n{p}baby list"
    }
  },

  // тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА MAIN COMMAND тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
  onStart: async function ({ api, event, args, message, usersData }) {
    try {
      const senderID = event.senderID;
      const senderName = await usersData.getName(senderID);
      const query = args.join(" ").toLowerCase();

      if (!query) {
        const ran = ["Bolo baby", "hum"];
        const r = ran[Math.floor(Math.random() * ran.length)];
        return message.reply(r, (err, info) => {
          if (!err) {
            global.GoatBot.onReply.set(info.messageID, {
              commandName: "baby",
              author: senderID
            });
          }
        });
      }

      // remove
      if (["remove", "rm"].includes(args[0])) {
        const parts = query.replace(/^(remove|rm)\s*/, "").split(" - ");
        if (parts.length < 2)
          return message.reply("Use: baby remove [Question] - [Reply]");
        const [ask, ans] = parts;
        const res = await axios.get(`${simsim}/delete?ask=${encodeURIComponent(ask)}&ans=${encodeURIComponent(ans)}`);
        return message.reply(res.data.message);
      }

      // list
      if (args[0] === "list") {
        const res = await axios.get(`${simsim}/list`);
        if (res.data.code === 200)
          return message.reply(`тЩ╛ Total Questions: ${res.data.totalQuestions}\nтШЕ Replies: ${res.data.totalReplies}\nтШая╕Оя╕О Developer: ${res.data.author}`);
        else
          return message.reply(`Error: ${res.data.message || "Failed to fetch list"}`);
      }

      // edit
      if (args[0] === "edit") {
        const parts = query.replace("edit ", "").split(" - ");
        if (parts.length < 3)
          return message.reply("Use: baby edit [Question] - [OldReply] - [NewReply]");
        const [ask, oldReply, newReply] = parts;
        const res = await axios.get(`${simsim}/edit?ask=${encodeURIComponent(ask)}&old=${encodeURIComponent(oldReply)}&new=${encodeURIComponent(newReply)}`);
        return message.reply(res.data.message);
      }

      // teach
      if (args[0] === "teach") {
        const parts = query.replace("teach ", "").split(" - ");
        if (parts.length < 2)
          return message.reply("Use: baby teach [Question] - [Reply]");
        const [ask, ans] = parts;
        const res = await axios.get(`${simsim}/teach?ask=${encodeURIComponent(ask)}&ans=${encodeURIComponent(ans)}&senderID=${senderID}&senderName=${encodeURIComponent(senderName)}`);
        return message.reply(res.data.message || "Reply added successfully!");
      }

      // normal message
      const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(query)}&senderName=${encodeURIComponent(senderName)}`);
      const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];

      for (const reply of responses) {
        await new Promise((resolve) => {
          message.reply(reply, (err, info) => {
            if (!err) {
              global.GoatBot.onReply.set(info.messageID, {
                commandName: "baby",
                author: senderID
              });
            }
            resolve();
          });
        });
      }

    } catch (err) {
      console.error(err);
      message.reply(`Error in baby command: ${err.message}`);
    }
  },

  // тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА HANDLE REPLY тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
  onReply: async function ({ api, event, Reply, message, usersData }) {
    try {
      const senderName = await usersData.getName(event.senderID);
      const replyText = event.body ? event.body.toLowerCase() : "";
      if (!replyText) return;

      const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(replyText)}&senderName=${encodeURIComponent(senderName)}`);
      const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];

      for (const reply of responses) {
        await new Promise((resolve) => {
          message.reply(reply, (err, info) => {
            if (!err) {
              global.GoatBot.onReply.set(info.messageID, {
                commandName: "baby",
                author: event.senderID
              });
            }
            resolve();
          });
        });
      }

    } catch (err) {
      console.error(err);
      message.reply(`Error in baby reply: ${err.message}`);
    }
  },

  // тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА AUTO CHAT TRIGGER тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
  onChat: async function ({ api, event, message, usersData }) {
    try {
      const raw = event.body ? event.body.toLowerCase().trim() : "";
      if (!raw) return;

      const senderName = await usersData.getName(event.senderID);
      const senderID = event.senderID;

      // ржпржжрж┐ рж╢рзБржзрзБ тАЬbabyтАЭ, тАЬbotтАЭ ржЗрждрзНржпрж╛ржжрж┐ ржмрж▓рзЗ
      if (["baby", "bot", "bby", "jannu", "xan", "ржмрзЗржкрж┐", "ржмржЯ", "ржмрзЗржмрж┐"].includes(raw)) {
        const greetings = [
          "ржмрзЗрж╢рж┐ bot Bot ржХрж░рж▓рзЗ leave ржирж┐ржмрзЛ ржХрж┐ржирзНрждрзБЁЯШТЁЯШТ",
    "рж╢рзБржиржмрзЛ ржирж╛ЁЯШ╝ рждрзБржорж┐ ржЖржорж╛рж░ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржХрзЗ ржкрзНрж░рзЗржо ржХрж░рж╛ржЗ ржжрж╛ржУ ржирж╛ржЗЁЯе║ржкржЪрж╛ рждрзБржорж┐ЁЯе║",
    "ржЖржорж┐ ржЖржмрж╛рж▓ ржжрзЗрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж┐ ржирж╛,okЁЯШТ",
    "ржПрждрзЛ ржбрзЗржХрзЛ ржирж╛,ржкрзНрж░рзЗржо ржП ржкрж░рзЗ ржпрж╛ржмрзЛ рждрзЛЁЯЩИ",
    "Bolo Babu, рждрзБржорж┐ ржХрж┐ ржЖржорж╛рж░ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ? ЁЯЩИЁЯТЛ",
    "ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржпрж╝рзЗ ржпрж╛ржпрж╝ ржХрж┐ржирзНрждрзБЁЯШС",
    "рж╣рзНржпрж╛ ржмрж▓рзЛЁЯШТ, рждрзЛржорж╛рж░ ржЬржирзНржп ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ЁЯШРЁЯШС?",
    "ржПрждрзЛ ржбрж╛ржХржЫрж┐рж╕ ржХрзЗржи?ржЧрж╛рж▓рж┐ рж╢рзБржиржмрж┐ ржирж╛ржХрж┐? ЁЯдм",
    "I love you januЁЯе░",
    "ржЖрж░рзЗ Bolo ржЖржорж╛рж░ ржЬрж╛ржи ,ржХрзЗржоржи ржЖржЫрзЛ?ЁЯШЪ",
    "ржЖржЬ ржмржЯ ржмрж▓рзЗ ржЕрж╕ржорзНржорж╛ржи ржХрж░ржЫрж┐,ЁЯШ░ЁЯШ┐",
    "Hop bedaЁЯШ╛,Boss ржмрж▓ bossЁЯШ╝",
    "ржЪрзБржк ржерж╛ржХ ,ржирж╛ржЗ рждрзЛ рждрзЛрж░ ржжрж╛ржд ржнрзЗржЧрзЗ ржжрж┐ржмрзЛ ржХрж┐ржирзНрждрзБ",
    "ржЖржорж╛ржХрзЗ ржирж╛ ржбрзЗржХрзЗ ржорзЗржпрж╝рзЗ рж╣рж▓рзЗ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ ржЗржиржмржХрзНрж╕рзЗ ржЪрж▓рзЗ ржпрж╛ ЁЯМЪЁЯШВ ЁЭРЕЁЭРЪЁЭРЬЁЭРЮЁЭРЫЁЭРиЁЭРиЁЭРд ЁЭРЛЁЭРвЁЭРзЁЭРд : https://www.facebook.com/profile.php?id=61581500445402",
    "ржЖржорж╛ржХрзЗ ржмржЯ ржирж╛ ржмрж▓рзЗ , ржмрж╕ ржорзЗрж╣рзЗржжрзА ржХрзЗ ржЬрж╛ржирзБ ржмрж▓ ржЬрж╛ржирзБ ЁЯШШ",
    "ржмрж╛рж░ ржмрж╛рж░ Disturb ржХрж░ржЫрж┐рж╕ ржХрзЛржирзЛЁЯШ╛,ржЖржорж╛рж░ ржЬрж╛ржирзБрж░ рж╕рж╛ржерзЗ ржмрзНржпрж╛рж╕рзНржд ржЖржЫрж┐ЁЯШЛ",
    "ржЖрж░рзЗ ржмрж▓ржж ржПрждрзЛ ржбрж╛ржХрж┐рж╕ ржХрзЗржиЁЯдм",
    "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ ,ржЖржорж┐ ржХрж┐ржирзНрждрзБ ржХрж┐рж╕ ржХрж░рзЗ ржжрж┐ржмрзЛЁЯШШ",
    "ржЖржорж╛рж░рзЗ ржПрждрзЛ ржбрж╛ржХрж┐рж╕ ржирж╛ ржЖржорж┐ ржоржЬрж╛ ржХрж░рж╛рж░ mood ржП ржирж╛ржЗ ржПржЦржиЁЯШТ",
    "рж╣рзНржпрж╛ржБ ржЬрж╛ржирзБ , ржПржЗржжрж┐ржХ ржП ржЖрж╕рзЛ ржХрж┐рж╕ ржжрзЗржЗЁЯдн ЁЯШШ",
    "ржжрзВрж░рзЗ ржпрж╛, рждрзЛрж░ ржХрзЛржирзЛ ржХрж╛ржЬ ржирж╛ржЗ, рж╢рзБржзрзБ bot bot ржХрж░рж┐рж╕ ЁЯШЙЁЯШЛЁЯдг",
    "рждрзЛрж░ ржХржерж╛ рждрзЛрж░ ржмрж╛ржбрж╝рж┐ ржХрзЗржЙ рж╢рзБржирзЗ ржирж╛ ,рждрзЛ ржЖржорж┐ ржХрзЛржирзЛ рж╢рзБржиржмрзЛ ?ЁЯдФЁЯШВ",
    "ржЖржорж╛ржХрзЗ ржбрзЗржХрзЛ ржирж╛,ржЖржорж┐ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ рж╕рж╛ржерзЗ ржмрзНржпрж╛рж╕рзНржд ржЖржЫрж┐",
    "ржХрж┐ рж╣рж▓рзЛ , ржорж┐рж╕рзНржЯрзЗржХ ржХрж░ржЪрзНржЫрж┐рж╕ ржирж╛ржХрж┐ЁЯдг",
    "ржмрж▓рзЛ ржХрж┐ ржмрж▓ржмрж╛, рж╕ржмрж╛рж░ рж╕рж╛ржоржирзЗ ржмрж▓ржмрж╛ ржирж╛ржХрж┐?ЁЯднЁЯдП",
    "ржЬрж╛ржи ржорзЗржпрж╝рзЗ рж╣рж▓рзЗ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ ржЗржиржмржХрзНрж╕рзЗ ржЪрж▓рзЗ ржпрж╛ржУ ЁЯШНЁЯлгЁЯТХ ЁЭРЕЁЭРЪЁЭРЬЁЭРЮЁЭРЫЁЭРиЁЭРиЁЭРд ЁЭРЛЁЭРвЁЭРзЁЭРд : https://www.facebook.com/profile.php?id=61581500445402",
    "ржХрж╛рж▓ржХрзЗ ржжрзЗржЦрж╛ ржХрж░рж┐рж╕ рждрзЛ ржПржХржЯрзБ ЁЯШИ",
    "рж╣рж╛ ржмрж▓рзЛ, рж╢рзБржиржЫрж┐ ржЖржорж┐ ЁЯШП",
    "ржЖрж░ ржХржд ржмрж╛рж░ ржбрж╛ржХржмрж┐ ,рж╢рзБржиржЫрж┐ рждрзЛ",
    "рж╣рзБржо ржмрж▓рзЛ ржХрж┐ ржмрж▓ржмрзЗЁЯШТ",
    "ржмрж▓рзЛ ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ рждрзЛржорж╛рж░ ржЬржирзНржп",
    "ржЖржорж┐ рждрзЛ ржЕржирзНржз ржХрж┐ржЫрзБ ржжрзЗржЦрж┐ ржирж╛ЁЯР╕ ЁЯШО",
    "ржЖрж░рзЗ ржмрзЛржХрж╛ ржмржЯ ржирж╛ ржЬрж╛ржирзБ ржмрж▓ ржЬрж╛ржирзБЁЯШМ",
    "ржмрж▓рзЛ ржЬрж╛ржирзБ ЁЯМЪ",
    "рждрзЛрж░ ржХрж┐ ржЪрзЛржЦрзЗ ржкржбрж╝рзЗ ржирж╛ ржЖржорж┐ ржмрзНржпрж╛рж╕рзНржд ржЖржЫрж┐ЁЯШТ",
    "рж╣рзБржо ржЬрж╛ржи рждрзЛржорж╛рж░ ржУржЗ ржЦрж╛ржирзЗ ржЙржорзНржорж╣ЁЯШСЁЯШШ",
    "ржЖрж╣ рж╢рзБржирж╛ ржЖржорж╛рж░ рждрзЛржорж╛рж░ ржЕрж▓рж┐рждрзЗ ржЧрж▓рж┐рждрзЗ ржЙржорзНржорж╛рж╣ЁЯШЗЁЯШШ",
    "jang hanga korbaЁЯШТЁЯШм",
    "рж╣рзБржо ржЬрж╛ржи рждрзЛржорж╛рж░ ржЕржЗржЦрж╛ржирзЗ ржЙржорзНржоржорж╛рж╣ЁЯШ╖ЁЯШШ",
    "ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ржмрж▓рзЗржи ржЖржкржирж╛рж░ ржЬржирзНржп ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐..!ЁЯе░",
    "ржнрж╛рж▓рзЛржмрж╛рж╕рж╛рж░ ржирж╛ржоржХ ржЖржмрж▓рж╛ржорж┐ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ ржЗржиржмржХрзНрж╕рзЗ ржЧрзБрждрж╛ ржжрж┐ржи ~ЁЯЩКЁЯШШЁЯдг ЁЭРЕЁЭРЪЁЭРЬЁЭРЮЁЭРЫЁЭРиЁЭРиЁЭРд ЁЭРЛЁЭРвЁЭРзЁЭРд : https://www.facebook.com/profile.php?id=61581500445402",
    "ржЖржорж╛ржХрзЗ ржПрждрзЛ ржирж╛ ржбрзЗржХрзЗ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ ржХрзЗ ржПржХржЯрж╛ ржЧржл ржжрзЗ ЁЯЩД",
    "ржЖржорж╛ржХрзЗ ржПрждрзЛ ржирж╛ ржбрзЗржХржЫ ржХрзЗржи ржнрж▓рзЛ ржЯрж╛рж▓рзЛ ржмрж╛рж╕рзЛ ржирж╛ржХрж┐ЁЯднЁЯЩИ",
    "ЁЯМ╗ЁЯМ║ЁЯТЪ-ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ржУржпрж╝рж╛ рж░рж╛рж╣ржорж╛рждрзБрж▓рзНрж▓рж╛рж╣-ЁЯТЪЁЯМ║ЁЯМ╗",
    "ржЖржорж┐ ржПржЦржи ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ рж╕рж╛ржерзЗ ржмрж┐ржЬрж┐ ржЖржЫрж┐ ржЖржорж╛ржХрзЗ ржбрж╛ржХржмрзЗржи ржирж╛-ЁЯШХЁЯШП ржзржирзНржпржмрж╛ржж-ЁЯдЭЁЯМ╗",
    "ржЖржорж╛ржХрзЗ ржирж╛ ржбрзЗржХрзЗ ржЖржорж╛рж░ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржХрзЗ ржПржХржЯрж╛ ржЬрж┐ ржПржл ржжрж╛ржУ-ЁЯШ╜ЁЯл╢ЁЯМ║",
    "ржЭрж╛ржВ ржерзБржорж╛рж▓рзЗ ржЖржЗрж▓рж╛ржкрж┐ржЙ ржкрзЗржкрж┐-ЁЯТЭЁЯШ╜",
    "ржЙржлржл ржмрзБржЭрж▓рж╛ржо ржирж╛ ржПрждрзЛ ржбрж╛ржХржЫрзЗржи ржХрзЗржирзЛ-ЁЯШдЁЯШбЁЯШИ",
    "ржЬрж╛ржи рждрзЛржорж╛рж░ ржмрж╛ржирзНржзржмрзА рж░рзЗ ржЖржорж╛рж░ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ рж╣рж╛рждрзЗ рждрзБрж▓рзЗ ржжрж┐ржмрж╛-ЁЯЩКЁЯЩЖтАНтЩВ",
    "ржЖржЬржХрзЗ ржЖржорж╛рж░ ржоржи ржнрж╛рж▓рзЛ ржирзЗржЗ рждрж╛ржЗ ржЖржорж╛рж░рзЗ ржбрж╛ржХржмрзЗржи ржирж╛-ЁЯШкЁЯдз",
    "ржЭрж╛ржВ ЁЯл╡ржерзБржорж╛рж▓рзЗ рзЯрж╛ржорж┐ рж░рж╛ржЗрждрзЗ ржкрж╛рж▓рзБржкрж╛рж╕рж┐ ржЙржорзНржоржорзНржорж╛рж╣-ЁЯМ║ЁЯддЁЯТж",
    "ржЪрзБржирж╛ ржУ ржЪрзБржирж╛ ржЖржорж╛рж░ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ рж╣ржмрзБ ржмржЙ ржорж╛ржЗрж╢рж╛'рж░рзЗ ржХрзЗржУ ржжрзЗржХржЫрзЛ ржЦрзБржЬрзЗ ржкрж╛ржЪрзНржЫрж┐ ржирж╛ЁЯШкЁЯдзЁЯШн",
    "рж╕рзНржмржкрзНржи рждрзЛржорж╛рж░рзЗ ржирж┐рзЯрзЗ ржжрзЗржЦрждрзЗ ржЪрж╛ржЗ рждрзБржорж┐ ржпржжрж┐ ржЖржорж╛рж░ рж╣ржпрж╝рзЗ ржерзЗржХрзЗ ржпрж╛ржУ-ЁЯТЭЁЯМ║ЁЯМ╗",
    "ржЬрж╛ржи рж╣рж╛ржЩрзНржЧрж╛ ржХрж░ржмрж╛-ЁЯЩКЁЯШЭЁЯМ╗",
    "рждрзЛржжрзЗрж░ ржЬржирзНржп ржПржХржЯрзБржУ рж╢рж╛ржирзНрждрж┐ ржирж╛ржЗ! рж╢рзБржзрзБ ржбрж┐рж╕рзНржЯрж╛рж░рзНржм ржХрж░рж┐рж╕ ЁЯШ┐",    
    "ржЬрж╛ржи ржорзЗржпрж╝рзЗ рж╣рж▓рзЗ ржЪрж┐ржкрж╛ржпрж╝ ржЖрж╕рзЛ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ ржерзЗржХрзЗ ржЕржирзЗржХ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ рж╢рж┐ржЦржЫрж┐ рждрзЛржорж╛рж░ ржЬржирзНржп-ЁЯЩКЁЯЩИЁЯШ╜",
    "ржЗрж╕рж╕ ржПрждрзЛ ржбрж╛ржХрзЛ ржХрзЗржирзЛ рж▓ржЬрзНржЬрж╛ рж▓рж╛ржЧрзЗ рждрзЛ-ЁЯЩИЁЯЦдЁЯМ╝",
    "ржЖржорж╛рж░ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ ржкржХрзНрж╖ ржерзЗржХрзЗ рждрзЛржорж╛рж░рзЗ ржПрждрзЛ ржПрждрзЛ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛-ЁЯе░ЁЯШ╜ЁЯл╢ ржЖржорж╛рж░ ржмрж╕ ржорзЗрж╣рзЗржжрзА рж╣рж╛рж╕рж╛ржирзЗ'рж░ ржЬржирзНржп ржжрзЛрзЯрж╛ ржХрж░ржмрзЗржи-ЁЯТЭЁЯТЪЁЯМ║ЁЯМ╗",
    "- ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржирж╛ржоржХ ржЖржмрзНрж▓рж╛ржорж┐ ржХрж░рждрзЗ ржоржи ржЪрж╛ржЗрж▓рзЗ ржЖржорж╛рж░ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ ржЗржиржмржХрзНрж╕ ржЪрж▓рзЗ ржпрж╛ржУ-ЁЯЩКЁЯе▒ЁЯСЕ ЁЯМ╗ЁЭРЕЁЭРАЁЭРВЁЭРДЁЭРБЁЭРОЁЭРОЁЭРК ЁЭРИЁЭРГ ЁЭРЛЁЭРИЁЭРНЁЭРК ЁЯМ╗:- https://www.facebook.com/profile.php?id=61581500445402",
    "ржЖржорж╛рж░ ржЬрж╛ржи рждрзБржорж┐ рж╢рзБржзрзБ ржЖржорж╛рж░ ржЖржорж┐ рждрзЛржорж╛рж░рзЗ рзйрзмрзл ржжрж┐ржи ржнрж╛рж▓рзЛржмрж╛рж╕рж┐-ЁЯТЭЁЯМ║ЁЯШ╜",
    "ржХрж┐рж░рзЗ ржкрзНрж░рзЗржо ржХрж░ржмрж┐ рждрж╛рж╣рж▓рзЗ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржПрж░ ржЗржиржмржХрзНрж╕рзЗ ржЧрзБрждрж╛ ржжрзЗ ЁЯШШЁЯдМ ЁЭРЕЁЭРЪЁЭРЬЁЭРЮЁЭРЫЁЭРиЁЭРиЁЭРд ЁЭРЛЁЭРвЁЭРзЁЭРд : https://www.facebook.com/profile.php?id=61581500445402",
    "ржЬрж╛ржи ржЖржорж╛рж░ ржмрж╕ ржорзЗрж╣рзЗржжрзА ржХрзЗ ржмрж┐ржпрж╝рзЗ ржХрж░ржмрж╛-ЁЯЩКЁЯШШЁЯе│",
    // ... ржПржнрж╛ржмрзЗ ржкрзБрж░рзЛ рж▓рж┐рж╕рзНржЯрзЗ рж╕ржм рж▓рж┐ржЩрзНржХржЗ ржПржЦржи https://www.facebook.com/profile.php?id=61581500445402
];

        const randomReply = greetings[Math.floor(Math.random() * greetings.length)];
        message.reply({
          body: `@${senderName} ${randomReply}`,
          mentions: [{ tag: `@${senderName}`, id: senderID }]
        }, (err, info) => {
          if (!err) {
            global.GoatBot.onReply.set(info.messageID, {
              commandName: "baby",
              author: senderID
            });
          }
        });
      }

      // ржпржжрж┐ baby + query рж╣рзЯ
      const prefixes = ["baby ", "bot ", "bby ", "jannu ", "xan ", "ржмрзЗржкрж┐ ", "ржмржЯ ", "ржмрзЗржмрж┐ "];
      const prefixMatch = prefixes.find(p => raw.startsWith(p));
      if (prefixMatch) {
        const query = raw.replace(prefixMatch, "").trim();
        if (!query) return;

        const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(query)}&senderName=${encodeURIComponent(senderName)}`);
        const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];

        for (const reply of responses) {
          await new Promise((resolve) => {
            message.reply(reply, (err, info) => {
              if (!err) {
                global.GoatBot.onReply.set(info.messageID, {
                  commandName: "baby",
                  author: senderID
                });
              }
              resolve();
            });
          });
        }
      }

    } catch (err) {
      console.error(err);
    }
  }
};
